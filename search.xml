<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux命令大全]]></title>
    <url>%2F2019%2F10%2F07%2FLinux%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8%2F</url>
    <content type="text"><![CDATA[远程管理常用命令关机shutdown 一分钟之后关闭电脑（不带任何参数）shutdown 选项 时间 shutdown 关机/重新启动-r 重新启动-c 取消关闭常用命令实例shutdown -r now 立刻重启shutdown now 立刻关机shutdown 20:25 20：25关机shutdown +10 系统再过十分钟后关机 查看或配置网卡信息ifconfigping本地回环用于测试网卡是否正常ifconfig | grep inet提示： 一台计算机中可能会有一个物理网卡和多个虚拟网卡，在Linux中物理网卡的名字通常以ensXX表示。 127.0.0.1 被称为本低回环/环回地址，一般用来测试本机网卡是否正常远程登陆和复制文件ssh在linux中SSh是非常常用的工具，通过SSH客户端我们可以连接到运行了SSh服务器的远程主机上数据传输时加密的，可以防止信息泄露数据传输是压缩的，可以提高传输速度scp 就是secure copy,在Linux下用来远程拷贝文件的命令它的格式与ssh基本相同，需要注意的是在指定端口时用的时-P而不是小写的scp -P port 01.py user@remote:Desktop/01.py //如果后面不是绝对路径，则用户的家目录作为参考路径scp -r demo user@remote:Desktop //-r可以传送文件scp 这个终端命令只能在Linux或者UNIX系统下使用如果在Windows中，可以安装PuTTY,使用pscp命令行工具或则安装FileZilla使用FTP进行文件传输 域名是ip地址的别名域名：例如www.baidu.com端口号：通过端口号可以找到计算机上运行的应用程序 SSH服务器的默认端口号是22，如果是默认端口号，在连接的时候可以省略01 ssh服务器，2202 Web服务器 8003 HTTPS 44304 FTP服务器，21 ssh客户端的简单使用ssh -p port user@remoteIPWindows 下SSH客户端的安装Putty http://www.chiark.greenend.org.uk/~sgtatham/putty/latest.htmlXShell http://xshellcn.com service iptables stopls -l 以列表的形式显示 用户 组用户 其他用户权限， 第一个字符如果如果是d表示目录硬链接，通俗的讲，就是有多少种方式，可以访问到当前目录/文件 对于文件来说 硬链接数只有一个 但对于文件夹来说，最少有两个，与当前文件夹下的子目录有关拥有则，家目录下 文件/目录 的拥有着通常都是当前用户组，在Linux中，很多时候，会出现组名和用户名相同的情况，后面会讲。大小时间名称 chmod +/- rwx 文件夹|目录chmod -rw 01.py 在终端命令中如果需要争对这个目录而执行终端命令，我们则需要给这个目录可执行权限。可读权限 显示目录的内容可写权限 修改目录的内容 超级用户Linux系统中的root账号通常用于系统的维护和管理，对操作系统的所有资源具有访问权限在大多数版本的Linux中，都不推荐直接使用账号登陆系统在Linux安装过程中，系统会自动创建一个用户账号，而中国默认的用户就称为“标准用户” sudosu是substitute user 的缩写，表示使用另一个用户的身份sudo命令用来以其他身份来执行命令，预设的身份为root用户使用sudo时，必须先输入密码，之后有5分钟的有效期限，超过期限则必须重新输入密码 组管理终端命令 groupadd 组名 添加组 groupdel 组名 删除组 cat /etc/group 确认组信息 chgrp 组名 文件/目录名 修改文件/目录的所属组 chgrp -R 组名 文件/目录名 递归修改文件/目录所属组 创建用户/设置密码/删除用户useradd -m -g 组 新建用户名 作用：添加新用户s -m 自动建立用户家目录 -g 指定用户所在的组，否则会建立一个和同名的组passwd 用户查看用户信息id [用户名] 查看用户UID和GID信息who 查看当前所有登陆的用户列表whoami 查看当前登陆用户的账户名 uid（用户ID） gid(组ID) 组(包含主组和附加组) id lisi cat -n /etc/passwd | grep lisi:50 lisi:x:1002:1001: :/home/lisi：行号 用户名：有密码：uid:gid: :家目录路径： cat -n /etc/group | grep pythonpython:x:1000:sudo:x:27:pythoncdrom:x:24:python passwd文件/etc/passwd文件按存放的是用户的信息，由6个分号组成的7个信息，分别是 用户名 密码（x,表示加密的密码） UID(用户标识) GID（组标识） 用户全名或本地账号 家目录 登陆使用的Shell,就是登陆之后，使用终端命令，ubuntu默认是dash whopython tty7 2017-05-10(上一次开机的时间) 09:29(:0)python pts/18 2018-10-10 02:35（上一次开机的时间） (172.16.140.133) usermodusermod 可以用来设置用户的主组/附加组和登陆Shell,命令格式如下：主组：通常在新建用户时指定，在etc/passwd的第4列GID对应的组附加组：在etc/group中最后一列表示该组的用户列表，用于指定用户的附加权限 提示：设置了用户的附加组之后，需要重新登陆才能生效！ #修改用户的主组（passwd中的GID）usermod -g 组 用户名#修改用户的附加组usermod -G 组 用户名#修改用户登陆Shellusermod -s /bin/bash指定完/bin/bash路径后，会在/etc/passwd 里面组信息的冒号后面添加/bin/bash,假如没有指定，默认为/bin/dash.注意：默认使用useradd添加的用户是没有权限使用sudo以及root身份执行命令的，可以使用以下命令，将添加到sudo附加组中usermod -G sudo 用户名sudo usermod -G sudo z hangsan which(重要)/etc/passwd 是用于保存用户信息的文件 ，指的是文件并不能执行。/usr/bin/passwd 用于修改用户密码的程序which 命令可以查看命令所在的位置，例如 which passwd /usr/bin/passwd ls -l /usr/bin/passwd -rwsr-xr-x 1 root root 52256 5 月 4 2017 /usr/bin/passwd which ls ls -l /usr/bin/ls which useradd /usr/sbin/useradd bin 和 sbin 在Linux中，绝大部分可执行文件都是保存在/bin(binary)是二进制执行文件的目录，主要用于具体应用 /bin (binary)是二进制执行文件目录，主要用于具体应用 /sbin (system binary) 是系统管理员专用的二进制代码存放目录，主要用于系统管理 /usr/bin (user commands for applicatons)后期安装的一些软件 /usr/sbin(super user commands for applictions)超级用户的一些管理程序 切换用户su - 用户名 切换用户，并且切换目录，-可以切换到用户家目录，否则保持位置不变。 su 不接用户名，可以切换到root chown 修改拥有者 chown 用户名|目录名chgrp 修改组 chgrp -R 组名 文件名|目录名chmod 修改权限 chmod -R 755 文件名|目录名 目标cal 查看当前月的日历cal -y 显示一年的日历date 查看当前的系统时间 磁盘信息df -h (disk free) 显示磁盘剩余空间du -h [目录名] disk usage 显示目录下的文件大小 -h 以人性化的方式显示大小 进程信息ps aux (process status)查看进程的详细信息top 动态显示运行中的进程kill [-9] 进程代号 终止指定代号的进程 参数含义a — 显示终端上的所有进程，包括其他用户的进程u —显示进程的详细状态x — 显示没有控制终端的进程 bash默认使用的shell 其他命令查找文件find find [路径] -name “*.py” 查找指定路径下的扩展名.py的文件，包括子目录 如果省略路径，表示当前文件夹下查找 之前学习的通配符，再使用find命令时同时可用 有关find的高级使用。软连接ln ln -s 被连接的源文件链接文件 建立文件的软链接，用通俗的方式讲 似于Windows下的快捷方式。 注意：1. 没有 -s 选项建立的是一个硬链接文件。两个文件占用相同大小的硬盘空间，工作中几乎不会建立文件的硬链接 2. 源文件要使用绝对路径，不能使用相对路径，这样可以方便移动链接文件后，任然能够正常使用。演练目标 将桌面目录下的01.py移动到 demo/b/c目录下2.在桌面目录下新建01.py的软连接 FirstPython分别使用相对路径和绝对路径建立FirstPython的软链接3.将FirstPython 移动到demo目录下，对比使用相对路径和绝对路径的区别。 打包和压缩tar软件安装apt-get 硬链接简介（知道）在使用ln创建链接时，如果没有-s选项，会创建一个硬链接，而不是软连接 硬链接演练 1.在/Desktop/demo目录下建立/Desktop/demo/b/c/01.py的硬链接01_hard 2.在使用ls -l查看文件的硬链接数（硬链接–有多少种方式可以访问文件或者目录） 3.删除 ~/Desktop/demo/b/c/01.py,并使用tree来确认demo目录下的三个链接文件 文件名和文件的数据时分开储存的。软链接：快捷方式硬链接：大名和小名的关系 打包压缩Windows rarMac zipLinux tar.gz tar 是Linux中最常用的备份工具，此命令可以把一系列文件打包到一个大文件中，不负责压缩。打包文件ta -cvf 打包文件名.tar 打包的文件/路径。。。解包文件tar -xvf 打包文件.tarc 生成档案文件，创建打包文件x 解开档案文件v 列出归档解档的详细过程，显示进度f 指定档案文件名称，f后面一定是.tar文件，所以必须放选项最后 gzip tar与gzip命令结合可以使用实现文件打包和压缩 用gzip压缩tar打包后的文件，其扩展名一般用 xxx.tar.gz tar 命令中有一个选项-z 可以调用gzip,从而可以方便的实现压缩和解压缩的功能 命令格式 tar -zcvf 打包文件.tar.gz 被压缩的文件/路径 tar -zxvf 打包文件.tar.gz tar -zxcf 打包文件.tar.gz -C目标路径 目录必须存在 bzip2(two) 压缩效果和gzip差不多 tar 与bzip2命令结合可以使用 tar只负责打包，不负责压缩 用bzip2压缩tar打包后的文件，其扩展名一般用xxx.tar.bz2 在tar命令中有一个-j可以调用bzip2,从而可以实现压缩和解压缩的功能 命令格式如下： tar -jcvf 打包文件.tar.bz2 被压缩的文件/路径 tar -jxvf 打包文件.tar.bz2 apt advanced packaging tool安装sudo apt install 软件包卸载sudo apt remove 软件名更新已安装的包sudo apt upgrade sudo apt install slsudo apt install htop]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java设计模式]]></title>
    <url>%2F2019%2F10%2F06%2Fjava%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[1.工厂模式 2.生成器模式 3.观察者模式 4.桥接模式 5.代理模式 6.状态模式 7.访问者模式 8.命令模式 9.装饰器模式 10.组合模式]]></content>
      <categories>
        <category>java</category>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Myblog的第一天]]></title>
    <url>%2F2019%2F10%2F04%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Myblog! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
